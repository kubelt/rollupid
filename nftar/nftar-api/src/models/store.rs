/*
 * NFT Storage API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * 
 * Generated by: https://openapi-generator.tech
 */

use image::{ImageBuffer, Rgba};

#[derive(Clone, Debug, PartialEq, Serialize, Deserialize)]
pub struct Meta {
    #[serde(rename = "name", skip_serializing_if = "Option::is_none")]
    pub name: Option<String>,
    #[serde(rename = "description", skip_serializing_if = "Option::is_none")]
    pub description: Option<String>,
    #[serde(rename = "properties", skip_serializing_if = "Option::is_none")]
    pub properties: Option<Vec<String>>,
    #[serde(rename = "type", skip_serializing_if = "Option::is_none")]
    pub image: Option<Vec<u8>>,
    // #[serde(rename = "data", skip_serializing_if = "Option::is_none")]
    // pub data: Option<Vec<u8>>,
    // #[serde(rename = "file", skip_serializing_if = "Option::is_none")]
    // pub file: Option<Vec<u8>>,
}


#[derive(Clone, Debug, PartialEq, Serialize, Deserialize)]
pub struct Form {
    #[serde(rename = "meta", skip_serializing_if = "Option::is_none")]
    pub meta: Option<Meta>,
    // #[serde(rename = "data", skip_serializing_if = "Option::is_none")]
    // pub data: Option<Vec<u8>>,
    // #[serde(rename = "file", skip_serializing_if = "Option::is_none")]
    // pub file: Option<Vec<u8>>,
}

impl Meta {
    pub fn new() -> Meta {
        Meta {
            name: None,
            description: None,
            properties: None,
            // data: None,
            // file: None,
            image: None,
        }
    }
}

impl Form {
    pub fn new() -> Form {
        Form {
            meta: None,
            // data: None,
            // file: None,
        }
    }
}

/// MIME type of the upload file or 'directory' when uploading multiple files.
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum Type {
    #[serde(rename = "directory")]
    Directory,
    #[serde(rename = "image/jpeg")]
    ImageJpeg,
    #[serde(rename = "application/json")]
    ApplicationJson,
    #[serde(rename = "other mime types")]
    OtherMimeTypes,
}

