generates:
  access.ts:
    schema:
      - 'gql/access.graphql'
    plugins:
      - typescript
      - typescript-validation-schema
    config:
      schema: zod
      withObjectType: true
      enumsAsTypes: false
      scalarSchemas:
        JWTString: z.string()

  address.ts:
    schema:
      - 'gql/address.graphql'
    plugins:
      - typescript
      - typescript-validation-schema
    config:
      schema: zod
      withObjectType: true
      enumsAsTypes: false

  profile.ts:
    schema:
      - 'gql/profile.graphql'
    plugins:
      - typescript
      - typescript-validation-schema
    config:
      schema: zod
      withObjectType: true
      enumsAsTypes: false
      directives:
        constraint:
          maxLength: max
          minLength: min

  edges.ts:
    schema:
      - 'gql/edges.graphql'
    plugins:
      - typescript
      - typescript-validation-schema
    config:
      schema: zod
      withObjectType: true
      enumsAsTypes: false
      scalarSchemas:
        URNComp: z.record(z.string()).or(z.boolean())

  starbase.ts:
    schema:
      - 'gql/starbase.graphql'
    plugins:
      - typescript
      - typescript-validation-schema
    config:
      schema: zod
      withObjectType: true
      enumsAsTypes: false

  object.ts:
    schema:
      - 'gql/object.graphql'
    plugins:
      - typescript
      - typescript-validation-schema
    config:
      schema: zod
      withObjectType: true
      enumsAsTypes: false
