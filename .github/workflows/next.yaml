---
name: test and build
on:
  push:
    branches:
      - main

jobs:

  # build
  # ----------------------------------------------------------------------------

  build:
    runs-on: ubuntu-latest
    permissions:
      packages: read
    steps:
      - uses: actions/checkout@master
      - uses: DeLaGuardo/setup-clojure@8.0
        with:
          bb: 0.8.156
          cli: 1.11.1.1149
      - uses: actions/setup-node@v3
        with:
          node-version: lts/gallium
          cache: 'npm'
          cache-dependency-path: package-lock.json

      - run: npm ci
      # - run: npm install cypress --save-dev
      - run: npm run test:all:release

  # 3iD
  # ----------------------------------------------------------------------------

  ThreeiD:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@master

      - uses: actions/setup-java@v3
        with:
          distribution: 'zulu'
          java-version: '18'

      - uses: DeLaGuardo/setup-clojure@8.0
        with:
          bb: 0.8.156
          cli: 1.11.1.1149

      - uses: actions/setup-node@v3
        with:
          node-version: lts/gallium
          cache: 'npm'
          cache-dependency-path: package-lock.json

      - name: install node dependencies
        run: npm ci

      - name: build sdk-web
        run: npm run build:sdk-web:develop

      - name: install node dependencies (for 3iD)
        working-directory: ./3iD
        run: npm ci

      - name: build and deploy 3iD
        working-directory: ./3iD
        env:
          # These values are injected into the generated wrangler.toml.
          ADMIN_ACCOUNT_ID: ${{ secrets.ADMIN_ACCOUNT_ID }}
          CURRENT_KV_APP_ID: ${{ secrets.CURRENT_KV_APP_ID }}
          CURRENT_URL: ${{ secrets.CURRENT_URL }}
          NEXT_KV_APP_ID: ${{ secrets.NEXT_KV_APP_ID }}
          NEXT_URL: ${{ secrets.NEXT_URL }}
          # The Datadog client token.
          DATADOG_CLIENT_TOKEN: ${{ secrets.DATADOG_CLIENT_TOKEN }}
          DATADOG_ENV: next
          # The Cloudflare API token used by wrangler.
          CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          # Cloudflare zone identifier for threeid.xyz.
          CLOUDFLARE_ZONE_ID: ${{ secrets.CLOUDFLARE_ZONE_ID }}
        run: bb deploy:app --deploy-env next

      - name: Clear Cloudflare cache
        uses: Cyb3r-Jak3/action-cloudflare-cache@<Latest Release>
        with:
          # Zone is required by both methods
          zone: ${{ secrets.CLOUDFLARE_ZONE_ID }}
          # Using API Token
          api_token: ${{ secrets.CLOUDFLARE_API_TOKEN }}

      - name: run smoke tests
        working-directory: ./3iD
        env:
          # These values are injected into the generated wrangler.toml.
          ADMIN_ACCOUNT_ID: ${{ secrets.ADMIN_ACCOUNT_ID }}
          CURRENT_KV_APP_ID: ${{ secrets.CURRENT_KV_APP_ID }}
          CURRENT_URL: ${{ secrets.CURRENT_URL }}
          NEXT_KV_APP_ID: ${{ secrets.NEXT_KV_APP_ID }}
          NEXT_URL: ${{ secrets.NEXT_URL }}
          # The Datadog client token.
          DATADOG_CLIENT_TOKEN: ${{ secrets.DATADOG_CLIENT_TOKEN }}
          DATADOG_ENV: current
          # The Cloudflare API token used by wrangler.
          CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          # Cloudflare zone identifier for threeid.xyz.
          CLOUDFLARE_ZONE_ID: ${{ secrets.CLOUDFLARE_ZONE_ID }}
        run: bb test:smoke --deploy-env next
      # Need pm2 to run `expo web` in the background
      - name: install pm2 (run expo in background)
        run: npm install pm2 -g
      - name: Compile app
        run: bb compile:app --deploy-env next
        working-directory: ./3iD
      - name: Run app
        run: pm2 start npm -- run web
        working-directory: ./3iD
      # Use `xvfb` to run the synpress tests headless
      - name: Cache Cypress
        id: cache-cypress
        uses: actions/cache@v3
        with:
          path: ./3iD/cypress
          key: ${{ runner.os }}-cypress
      - name: "run ui tests"
        uses: GabrielBB/xvfb-action@v1
        env:
          NETWORK_NAME: mainnet
          SKIP_METAMASK_SETUP: true
          CYPRESS_GENERIC_SECRET_WORDS: ${{ secrets.METAMASK_3ID_TESTING_RECOVERY_PHRASE }}
          CYPRESS_GENERIC_ACCOUNT: ${{ secrets.METAMASK_3ID_TESTING_ACCOUNT }}
        with:
          working-directory: ./3iD
          run: npm run test:synpress:run
