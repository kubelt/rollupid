---
name: test and build
on:
  push:
    tags:
      - '*'

jobs:
  # redeem
  # ----------------------------------------------------------------------------
  build-publish-test-redeem-next:
    runs-on: ubuntu-latest
    timeout-minutes: 60
    steps:
      - uses: actions/checkout@v2
      - name: Cache node modules
        id: cache-npm
        uses: actions/cache@v3
        env:
          cache-name: cache-node-modules
        with:
          # npm cache files are stored in `~/.npm` on Linux/macOS
          path: ~/.npm
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('/redeem/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-
      - uses: actions/setup-node@v3
        with:
          node-version: lts/gallium
          cache: 'npm'
          cache-dependency-path: ./redeem/package-lock.json
      - run: npm install
        working-directory: redeem
      - name: Deploy to Dev Worker
        uses: cloudflare/wrangler-action@2.0.0
        with:
          apiToken: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          accountId: ${{ secrets.ADMIN_ACCOUNT_ID }}
          workingDirectory: 'redeem'
          command: publish --env next
          environment: 'next'
          secrets: |
            DATADOG_CLIENT_TOKEN
            DATADOG_APPLICATION_ID
            DATADOG_ENV
            DATADOG_SERVICE_NAME
            OORT_HOST
            NFTAR_URL
            NFTAR_AUTHORIZATION
            INVITE_CONTRACT_ADDRESS
            CHAIN_ID
            INVITE_OPERATOR_PRIVATE_KEY
            TWITTER_BEARER_TOKEN
            ALCHEMY_API_KEY
            ALCHEMY_API_URL
            ALCHEMY_NFT_URL
        env:
          # CF_ROUTE: https://dev.dapp.threeid.xyz/*
          # These values are injected into the generated wrangler.toml.
          ADMIN_ACCOUNT_ID: ${{ secrets.ADMIN_ACCOUNT_ID }}
          # The Datadog client token.
          DATADOG_CLIENT_TOKEN: ${{ secrets.GET_THREEID_DATADOG_CLIENT_TOKEN }}
          DATADOG_APPLICATION_ID: ${{ secrets.GET_THREEID_DATADOG_APPLICATION_ID }}
          DATADOG_ENV: development
          DATADOG_SERVICE_NAME: get-3id
          # The Cloudflare API token used by wrangler.
          CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          # Cloudflare zone identifier for threeid.xyz.
          CLOUDFLARE_ZONE_ID: ${{ secrets.CLOUDFLARE_ZONE_ID }}
          OORT_HOST: oort-testnet.kubelt.com
          NFTAR_URL: ${{ secrets.NFTAR_TEST_URL }}
          NFTAR_AUTHORIZATION: ${{ secrets.NFTAR_TEST_AUTHORIZATION }}
          INVITE_CONTRACT_ADDRESS: ${{ secrets.INVITE_TEST_CONTRACT_ADDRESS }}
          CHAIN_ID: 5
          INVITE_OPERATOR_PRIVATE_KEY: ${{ secrets.INVITE_OPERATOR_TEST_PRIVATE_KEY }}
          TWITTER_BEARER_TOKEN: ${{ secrets.TWITTER_DEV_BEARER_TOKEN }}
          ALCHEMY_API_KEY: ${{ secrets.ALCHEMY_GOERLI_API_KEY }}
          ALCHEMY_API_URL: ${{ secrets.ALCHEMY_GOERLI_API_URL }}
          ALCHEMY_NFT_URL: ${{ secrets.ALCHEMY_GOERLI_NFT_URL }}

  # threeid
  # ----------------------------------------------------------------------------

  build-publish-test-threeid-next:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Cache node modules
        id: cache-npm
        uses: actions/cache@v3
        env:
          cache-name: cache-node-modules
        with:
          # npm cache files are stored in `~/.npm` on Linux/macOS
          path: ~/.npm
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('/threeid/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-
      - uses: actions/setup-node@v3
        with:
          node-version: lts/gallium
          cache: 'npm'
          cache-dependency-path: ./threeid/package-lock.json
      - run: npm install
        working-directory: threeid
      - name: Publish
        uses: cloudflare/wrangler-action@2.0.0
        with:
          apiToken: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          accountId: ${{ secrets.ADMIN_ACCOUNT_ID }}
          workingDirectory: 'threeid'
          command: publish --env next
          environment: 'next'
          secrets: |
            SESSION_SECRET
            DATADOG_CLIENT_TOKEN
            DATADOG_APPLICATION_ID
            DATADOG_ENV
            DATADOG_SERVICE_NAME
            OORT_HOST
            OORT_SCHEMA
            OORT_PORT
            NFTAR_URL
            NFTAR_AUTHORIZATION
            MINTPFP_CONTRACT_ADDRESS
            NFTAR_CHAIN_ID
            VALID_CHAIN_ID_NAME
        env:
          CF_ZONE_ID: ${{ secrets.CF_ZONE_ID }}
          SESSION_SECRET: ${{ secrets.SESSION_SECRET }}
          # These values are injected into the generated wrangler.toml.
          ADMIN_ACCOUNT_ID: ${{ secrets.ADMIN_ACCOUNT_ID }}
          # The Datadog client token.
          DATADOG_CLIENT_TOKEN: ${{ secrets.DATADOG_CLIENT_TOKEN }}
          DATADOG_APPLICATION_ID: ${{ secrets.DATADOG_APPLICATION_ID }}
          DATADOG_ENV: next
          DATADOG_SERVICE_NAME: 3id-application
          # The Cloudflare API token used by wrangler.
          CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          # Cloudflare zone identifier for threeid.xyz.
          CLOUDFLARE_ZONE_ID: ${{ secrets.CLOUDFLARE_ZONE_ID }}
          OORT_HOST: oort-testnet.kubelt.com
          OORT_SCHEMA: https
          OORT_PORT: 443
          NFTAR_URL: ${{ secrets.NFTAR_TEST_URL }}
          NFTAR_AUTHORIZATION: ${{ secrets.NFTAR_TEST_AUTHORIZATION }}
          MINTPFP_CONTRACT_ADDRESS: ${{ secrets.MINT_PFP_TEST_CONTRACT_ADDRESS }}
          NFTAR_CHAIN_ID: 5
          VALID_CHAIN_ID_NAME: goerli
      - name: Install Playwright Browsers
        run: npx playwright install --with-deps
        working-directory: threeid
      - name: Run Playwright tests
        run: npx playwright test
        env:
          NODE_ENV: next
          TEST_ENV: true
          ETH_GOERLI_PK: ${{ secrets.ETH_GOERLI_PK }}
          DAPP_HOST: dapp-next.threeid.xyz
          DAPP_PORT: 443
          DAPP_SCHEMA: https
        working-directory: threeid
      - uses: actions/upload-artifact@v2
        if: always()
        with:
          name: playwright-report
          path: playwright-report/
          retention-days: 5
