---
name: Galaxy

on:
  push:
    branches:
      - main

jobs:
  build-publish-test-galaxy-dev:
    runs-on: ubuntu-latest
    timeout-minutes: 60
    steps:
      - uses: actions/checkout@v2
      - name: Cache Modules
        id: cache-modules
        uses: actions/cache@v3
        with:
          path: ./node_modules
          key: ${{ runner.os }}-modules--${{ hashFiles('yarn.lock') }}
      - uses: cachix/install-nix-action@v18
        if: steps.cache-modules.outputs.cache-hit != 'true'
        with:
          nix_path: nixpkgs=channel:nixos-unstable
      - run: nix-build
      - uses: actions/setup-node@v3
        if: steps.cache-modules.outputs.cache-hit == 'true'
        with:
          node-version-file: .nvmrc
          cache: "yarn"
      - name: Install
        if: steps.cache-modules.outputs.cache-hit != 'true'
        run: yarn install
      - name: Code Generation
        run: yarn gql
      - name: Deploy to Dev Worker
        uses: cloudflare/wrangler-action@2.0.0
        with:
          apiToken: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          workingDirectory: "projects/galaxy"
          command: publish --env dev
          environment: "dev"
          secrets: |
            DATADOG_CLIENT_TOKEN
            DATADOG_APPLICATION_ID
            DATADOG_ENV
            DATADOG_SERVICE_NAME
            NFTAR_URL
            NFTAR_AUTHORIZATION
        env:
          SESSION_SECRET: "secret"
          DATADOG_CLIENT_TOKEN: ${{ secrets.DATADOG_CLIENT_TOKEN }}
          DATADOG_APPLICATION_ID: ${{ secrets.DATADOG_APPLICATION_ID }}
          DATADOG_ENV: development
          DATADOG_SERVICE_NAME: 3id-application
          CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          CLOUDFLARE_ACCOUNT_ID: ${{ secrets.ADMIN_ACCOUNT_ID }}
          NFTAR_URL: ${{ secrets.NFTAR_TEST_URL }}
          NFTAR_AUTHORIZATION: ${{ secrets.NFTAR_TEST_AUTHORIZATION }}
          MINTPFP_CONTRACT_ADDRESS: ${{ secrets.MINT_PFP_TEST_CONTRACT_ADDRESS }}
