---
name: test and build
on:
  pull_request:
    branches:
      - main

jobs:
  changes:
    runs-on: ubuntu-latest
    outputs:
      sdk: ${{ steps.changes.outputs.sdk }}
      dapp: ${{ steps.changes.outputs.dapp }}
      www: ${{ steps.changes.outputs.www }}
      ext: ${{ steps.changes.outputs.ext }}
      threeid: ${{ steps.changes.outputs.threeid }}
    steps:
      # find out what deploy stack to use
      - uses: actions/checkout@master
      - uses: dorny/paths-filter@v2
        id: changes
        with:
          filters: |
            sdk: 'src/**'
            dapp: 'dapp/**'
            www: 'www/**'
            ext: 'ext/**'
            threeid: 'threeid/**'

  # To detect lint errors across namespaces in your project, a cache is
  # needed. A cache will be created at .clj-kondo/ when you run
  # clj-kondo. It is recommended to lint the entire classpath to teach
  # clj-kondo about all the libraries you are using, including Clojure
  # and/or ClojureScript itself.
  pre-lint:
    needs: changes
    #if: needs.changes.outputs.sdk == 'true'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@master
      - uses: DeLaGuardo/setup-clojure@8.0
        with:
          clj-kondo: 2022.05.31
      - run: clj-kondo --lint "$(clj -Spath)" --dependencies --parallel --copy-configs

  # ddt
  # ----------------------------------------------------------------------------

  lint-ddt:
    needs: pre-lint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@master
      - uses: DeLaGuardo/setup-clojure@8.0
        with:
          clj-kondo: 2022.05.31
      - run: clj-kondo --fail-level error --lint src/main/com/kubelt/ddt*

  build-ddt:
    needs: changes
    if: needs.changes.outputs.sdk == 'true'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@master
      - uses: DeLaGuardo/setup-clojure@8.0
        with:
          bb: 0.8.156
          cli: 1.11.1.1149
      - uses: actions/setup-node@v3
        with:
          node-version: lts/gallium
          cache: 'npm'
          cache-dependency-path: package-lock.json
      - run: npm install
      - run: npm run build:ddt:develop

  # kbt
  # ----------------------------------------------------------------------------

  lint-kbt:
    needs: pre-lint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@master
      - uses: DeLaGuardo/setup-clojure@8.0
        with:
          clj-kondo: 2022.05.31
      - run: clj-kondo --fail-level error --lint src/main/com/kubelt/kbt*

  build-kbt:
    needs: changes
    if: needs.changes.outputs.sdk == 'true'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@master
      - uses: DeLaGuardo/setup-clojure@8.0
        with:
          bb: 0.8.156
          cli: 1.11.1.1149
      - uses: actions/setup-node@v3
        with:
          node-version: lts/gallium
          cache: 'npm'
          cache-dependency-path: package-lock.json
      - run: npm install
      - run: npm run build:kbt:develop

  # sdk
  # ----------------------------------------------------------------------------

  lint-lib:
    needs: pre-lint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@master
      - uses: DeLaGuardo/setup-clojure@8.0
        with:
          clj-kondo: 2022.05.31
      - run: clj-kondo --fail-level error --lint src/main/com/kubelt/lib*

  lint-proto:
    needs: pre-lint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@master
      - uses: DeLaGuardo/setup-clojure@8.0
        with:
          clj-kondo: 2022.05.31
      - run: clj-kondo --fail-level error --lint src/main/com/kubelt/proto*

  lint-spec:
    needs: pre-lint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@master
      - uses: DeLaGuardo/setup-clojure@8.0
        with:
          clj-kondo: 2022.05.31
      - run: clj-kondo --fail-level error --lint src/main/com/kubelt/spec*

  lint-sdk:
    needs: pre-lint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@master
      - uses: DeLaGuardo/setup-clojure@8.0
        with:
          clj-kondo: 2022.05.31
      - run: clj-kondo --fail-level error --lint src/main/com/kubelt/sdk*

  # Builds the node library version of the SDK (using the :node
  # conditional reader variant).
  build-sdk:
    needs: changes
    if: needs.changes.outputs.sdk == 'true'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@master
      - uses: DeLaGuardo/setup-clojure@8.0
        with:
          bb: 0.8.156
          cli: 1.11.1.1149
      - uses: actions/setup-node@v3
        with:
          node-version: lts/gallium
          cache: 'npm'
          cache-dependency-path: package-lock.json
      - run: npm install
      - run: npm run build:sdk:develop

  # Builds the node module version of the SDK (using the :browser
  # conditional reader variant).
  build-sdk-web:
    needs: changes
    if: needs.changes.outputs.sdk == 'true'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@master
      - uses: DeLaGuardo/setup-clojure@8.0
        with:
          bb: 0.8.156
          cli: 1.11.1.1149
      - uses: actions/setup-node@v3
        with:
          node-version: lts/gallium
          cache: 'npm'
          cache-dependency-path: package-lock.json
      - run: npm install
      - run: npm run build:sdk-web:develop

  # ----------------------------------------------------------------------------

  # Execute the SDK tests written in ClojureScript.
  test-sdk-cljs:
    needs: changes
    if: needs.changes.outputs.sdk == 'true'
    runs-on: ubuntu-latest
    env:
      METAMASK_PASSWORD: ${{ secrets.METAMASK_3ID_TESTING_PASSWORD }}
      METAMASKID_RECOVERY_PHRASE: ${{ secrets.METAMASK_3ID_TESTING_RECOVERY_PHRASE }}
    steps:
      - uses: actions/checkout@master
      - uses: DeLaGuardo/setup-clojure@8.0
        with:
          bb: 0.8.156
          cli: 1.11.1.1149
      - uses: actions/setup-node@v3
        with:
          node-version: lts/gallium
          cache: 'npm'
          cache-dependency-path: package-lock.json
      - run: npm install
      - run: bb run test:sdk:cljs:develop

  # Execute the SDK tests written in JavaScript.
  test-sdk-js:
    needs: changes
    if: needs.changes.outputs.sdk == 'true'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@master
      - uses: DeLaGuardo/setup-clojure@8.0
        with:
          bb: 0.8.156
          cli: 1.11.1.1149
      - uses: actions/setup-node@v3
        with:
          node-version: lts/gallium
          cache: 'npm'
          cache-dependency-path: package-lock.json
      - run: npm install
      - run: bb run test:sdk:js:develop

  test-web:
    needs: changes
    if: needs.changes.outputs.sdk == 'true'
    runs-on: ubuntu-latest
    env:
      CHROME_BIN: /snap/bin/chromium
    steps:
      - uses: actions/checkout@master
      - uses: DeLaGuardo/setup-clojure@8.0
        with:
          bb: 0.8.156
          cli: 1.11.1.1149
      - uses: actions/setup-node@v3
        with:
          node-version: lts/gallium
          cache: 'npm'
          cache-dependency-path: package-lock.json
      - run: sudo apt-get update
      - run: sudo apt-get install -y chromium-browser
      - run: npm install
        # Run the CI version of the web tests using headless Chrome.
      - run: npm run test:web:ci

  # ----------------------------------------------------------------------------
  publish-threeid:
    needs: changes
    if: needs.changes.outputs.threeid == 'true'
    runs-on: ubuntu-latest
    env:
      ENVIROMENT: "development"
      SESSION_SECRET: "secret"
      # These values are injected into the generated wrangler.toml.
      ADMIN_ACCOUNT_ID: ${{ secrets.ADMIN_ACCOUNT_ID }}
      # The Datadog client token.
      DATADOG_CLIENT_TOKEN: ${{ secrets.DATADOG_CLIENT_TOKEN }}
      DATADOG_ENV: current
      # The Cloudflare API token used by wrangler.
      CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}
      # Cloudflare zone identifier for threeid.xyz.
      CLOUDFLARE_ZONE_ID: ${{ secrets.CLOUDFLARE_ZONE_ID }}
    steps:
      - uses: actions/checkout@v2
      - run: npm install
        with:
          workingDirectory: 'threeid'
      - name: Publish
        uses: cloudflare/wrangler-action@2.0.0
        with:
          apiToken: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          accountId: ${{ secrets.ADMIN_ACCOUNT_ID }}
          workingDirectory: 'threeid'
          command: publish --env development


  # test-sdk-web:
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@master
  #     - uses: DeLaGuardo/setup-clojure@8.0
  #       with:
  #         bb: 0.8.156
  #         cli: 1.11.1.1149
  #     - uses: actions/setup-node@v3
  #       with:
  #         node-version: lts/gallium
  #         cache: 'npm'
  #         cache-dependency-path: package-lock.json
  #     - run: npm install
  #     - run: npm run test:sdk-web:develop

  # test-dapp:
  #   runs-on: ubuntu-latest
  #   permissions:
  #     packages: read
  #   services:
  #     cloudflare-worker:
  #       image: ghcr.io/kubelt/cloudflare-worker:latest
  #       credentials:
  #         username: ${{ github.actor }}
  #         password: ${{ secrets.github_token }}
  #       ports:
  #         - 8787:8787
  #   steps:
  #     - uses: actions/checkout@master
  #     - uses: DeLaGuardo/setup-clojure@8.0
  #       with:
  #         bb: 0.8.156
  #         cli: 1.11.1.1149
  #     - uses: actions/setup-node@v3
  #       with:
  #         node-version: lts/gallium
  #         cache: 'npm'
  #         cache-dependency-path: package-lock.json
  #     - run: npm ci
  #     # TODO: Enable once JSON RPC work is ready
  #     # Compile and run dapp
  #     - run: npm run build:dapp:release
  #     - run: npm run test:dapp:ci:compile
  #     # Run Cypress tests AFTER the server is running
  #     # Install cypress if it didn't get cached properly
  #     - run: npm install cypress --save-dev
  #     - run: npm run test:dapp:ci:run
  #     # Compile and run re-frame tests with karma
  #     - run: npm run test:dapp-karma:ci:compile
  #     - run: npm run test:dapp-karma:ci:run
