---
name: Services
on:
  pull_request:
    branches:
      - main

defaults:
  run:
    working-directory: ./services

jobs:
  changes:
    runs-on: ubuntu-latest
    outputs:
      services: ${{ steps.changes.outputs.services }}
    steps:
      # find out what deploy stack to use
      - uses: actions/checkout@master
      - uses: dorny/paths-filter@v2
        id: changes
        with:
          filters: |
            services:
              - 'services/**'
              - '.github/workflows/pr-services.yaml'

  build-test-services:
    needs: changes
    if: needs.changes.outputs.services == 'true'
    runs-on: ubuntu-latest
    timeout-minutes: 60
    steps:
      - uses: actions/checkout@v2

      - uses: cachix/install-nix-action@v18
        with:
          nix_path: nixpkgs=channel:nixos-unstable

      - run: nix-build services.nix

      - name: Cache Dependencies
        id: cache-modules
        uses: actions/cache@v3
        with:
          path: |
            node_modules
            .yarn
          key: ${{ runner.os }}-node_modules-${{ hashFiles('yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-node_modules-

      - name: Install Dependencies
        run: yarn install

      - name: Code Generation
        run: yarn gql

      - name: Build
        run: yarn build
        env:
          CLOUDFLARE_ACCOUNT_ID: ${{ secrets.INTERNAL_CLOUDFLARE_ACCOUNT_ID }}
          CLOUDFLARE_API_TOKEN: ${{ secrets.TOKEN_CLOUDFLARE_API }}
      - name: Test
        run: yarn test
