---
name: test and build
on:
  pull_request:
    branches:
      - main

jobs:
  build-test-workspace:
    runs-on: ubuntu-latest
    timeout-minutes: 60
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v3
        with:
          node-version: lts/gallium
          cache: "yarn"
      - name: Install
        run: yarn install
      - name: Build
        run: yarn build
      - name: Test
        run: yarn test

  # nftar
  # ----------------------------------------------------------------------------
  build-test-nftar:
    runs-on: ubuntu-latest
    timeout-minutes: 60
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v3
        with:
          node-version: lts/gallium
          cache: "npm"
          cache-dependency-path: ./nftar/package-lock.json
      - run: npm install
        working-directory: nftar
      - name: Build and Test
        run: npm test
        working-directory: nftar
        env:
          CHAIN: "ethereum"
          CHAIN_ID: 5
          OORT_URL: oort-devnet.kubelt.com
          STORAGE_KEY: ${{ secrets.NFT_STORAGE_DEV }}
          WALLET_PRIVATE_KEY: ${{ secrets.MINT_PFP_TEST_OPERATOR_PRIVATE_KEY }} # TODO: this is a bad env name
          ALCHEMY_URL: ${{ secrets.ALCHEMY_GOERLI_API_URL }}
          ALCHEMY_API_KEY: ${{ secrets.ALCHEMY_GOERLI_API_KEY }}
          ALCHEMY_NETWORK: "ETH_MAINNET"
          INVITE_CONTRACT_ADDRESS: ${{ secrets.INVITE_TEST_CONTRACT_ADDRESS }}
          PFP_CONTRACT_ADDRESS: ${{ secrets.MINT_PFP_TEST_CONTRACT_ADDRESS }}
          NFTAR_API_KEY: "test"

  # crdt
  # ----------------------------------------------------------------------------
  build-test-crdt:
    runs-on: ubuntu-latest
    timeout-minutes: 60
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v3
        with:
          node-version: lts/gallium
          cache: "npm"
          cache-dependency-path: ./smartcontracts/eth/crdt/package-lock.json
      - run: npm install
        working-directory: smartcontracts/eth/crdt
      - name: Build and Test
        run: npm run build && npm test
        working-directory: smartcontracts/eth/crdt
        env:
          CRDT_ETHERSCAN_API_KEY: ${{ secrets.CRDT_ETHERSCAN_API_KEY }}
          CRDT_GOERLI_OWNER_PRIVATE: ${{ secrets.CRDT_GOERLI_OWNER_PRIVATE }}
          CRDT_GOERLI_OWNER_ADDRESS: ${{ secrets.CRDT_GOERLI_OWNER_ADDRESS }}
          CRDT_GOERLI_ALCHEMY_URL: ${{ secrets.CRDT_GOERLI_ALCHEMY_URL }}
          CRDT_MUMBAI_ALCHEMY_URL: ${{ secrets.CRDT_MUMBAI_ALCHEMY_URL }}
          CRDT_POLYGON_ALCHEMY_URL: ${{ secrets.CRDT_POLYGON_ALCHEMY_URL }}
          CRDT_ETHEREUM_ALCHEMY_URL: ${{ secrets.CRDT_ETHEREUM_ALCHEMY_URL }}
