---
name: 3ID

on:
  push:
    branches:
      - main

jobs:
  build-publish-test-threeid-dev:
    runs-on: ubuntu-latest
    timeout-minutes: 60
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v3
        with:
          node-version: lts/gallium
          cache: "yarn"
      - run: yarn install
      - name: Code Generation
        run: yarn gql
      - name: Deploy to Dev Worker
        uses: cloudflare/wrangler-action@2.0.0
        with:
          apiToken: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          workingDirectory: "projects/threeid"
          command: publish --env dev
          environment: "dev"
          secrets: |
            SESSION_SECRET
            DATADOG_CLIENT_TOKEN
            DATADOG_APPLICATION_ID
            DATADOG_ENV
            DATADOG_SERVICE_NAME
            OORT_HOST
            OORT_SCHEMA
            OORT_PORT
            NFTAR_URL
            NFTAR_AUTHORIZATION
            MINTPFP_CONTRACT_ADDRESS
            NFTAR_CHAIN_ID
            VALID_CHAIN_ID_NAME
        env:
          TEST_ENV: true
          SESSION_SECRET: "secret"
          # CF_ROUTE: https://3id-dev.kubelt.com/*
          # These values are injected into the generated wrangler.toml.
          # The Datadog client token.
          DATADOG_CLIENT_TOKEN: ${{ secrets.DATADOG_CLIENT_TOKEN }}
          DATADOG_APPLICATION_ID: ${{ secrets.DATADOG_APPLICATION_ID }}
          DATADOG_ENV: development
          DATADOG_SERVICE_NAME: 3id-application
          # The Cloudflare API token used by wrangler.
          CLOUDFLARE_ACCOUNT_ID: ${{ secrets.ADMIN_ACCOUNT_ID }}
          OORT_HOST: oort-devnet.kubelt.com
          OORT_SCHEMA: https
          OORT_PORT: 443
          NFTAR_URL: ${{ secrets.NFTAR_TEST_URL }}
          NFTAR_AUTHORIZATION: ${{ secrets.NFTAR_TEST_AUTHORIZATION }}
          MINTPFP_CONTRACT_ADDRESS: ${{ secrets.MINT_PFP_TEST_CONTRACT_ADDRESS }}
          NFTAR_CHAIN_ID: 5
          VALID_CHAIN_ID_NAME: goerli
      # - name: Cache playwright binaries
      #   id: playwright-cache
      #   uses: actions/cache@v3
      #   with:
      #     path: |
      #       ~/.cache/ms-playwright
      #     key: cache-playwright-linux-1.25.2
      - name: Install Playwright Browsers
        # if: steps.playwright-cache.outputs.cache-hit != 'true'
        run: npx playwright install --with-deps
        working-directory: projects/threeid
      - name: Run Playwright tests
        run: npx playwright test
        env:
          NODE_ENV: dev
          TEST_ENV: true
          ETH_GOERLI_PK: ${{ secrets.ETH_GOERLI_PK }}
          DAPP_HOST: 3id-dev.kubelt.com
          DAPP_PORT: 443
          DAPP_SCHEMA: https
        working-directory: projects/threeid
      - uses: actions/upload-artifact@v2
        if: always()
        with:
          name: playwright-report
          path: playwright-report/
          retention-days: 5
