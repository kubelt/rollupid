---
name: Profile

on:
  push:
    branches:
      - main

defaults:
  run:
    working-directory: ./apps

jobs:
  build-publish-test-profile-dev:
    runs-on: ubuntu-latest
    environment: dev
    timeout-minutes: 60
    steps:
      - uses: actions/checkout@v2

      - uses: cachix/install-nix-action@v18
        with:
          nix_path: nixpkgs=channel:nixos-unstable

      - run: nix-build apps.nix

      - name: Cache Dependencies
        id: cache-modules
        uses: actions/cache@v3
        with:
          path: |
            node_modules
            .yarn
          key: ${{ runner.os }}-node_modules-${{ hashFiles('yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-node_modules-

      - name: Install Dependencies
        run: yarn install

      - name: Test
        run: yarn workspaces foreach -i -v -t --include profile run test

      - name: Deploy to Dev Worker
        uses: cloudflare/wrangler-action@2.0.0
        with:
          apiToken: ${{ secrets.TOKEN_CLOUDFLARE_API }}
          accountId: ${{ secrets.INTERNAL_CLOUDFLARE_ACCOUNT_ID }}
          workingDirectory: 'apps/profile'
          command: publish --env dev
          environment: 'dev'
          secrets: |
            SECRET_SESSION_KEY
            SECRET_SESSION_SALT
            PROFILE_CLIENT_ID
            PROFILE_CLIENT_SECRET
            APIKEY_ALCHEMY_ETH
            APIKEY_ALCHEMY_POLYGON
        env:
          NODE_ENV: 'development'
          SECRET_SESSION_KEY: ${{ secrets.SECRET_SESSION_KEY_DEV }}
          SECRET_SESSION_SALT: ${{ secrets.SECRET_SESSION_SALT_DEV }}
          PROFILE_CLIENT_ID: ${{ vars.INTERNAL_PROFILE_OAUTH_CLIENT_ID_DEV }}
          PROFILE_CLIENT_SECRET: ${{ secrets.SECRET_PROFILE_OAUTH_CLIENT_SECRET_DEV }}
          APIKEY_ALCHEMY_ETH: ${{ secrets.APIKEY_ALCHEMY_GALAXY_MAINNET }}
          APIKEY_ALCHEMY_POLYGON: ${{ secrets.APIKEY_ALCHEMY_POLYGON_MAINNET }}
      # - name: Cache playwright binaries
      #   id: playwright-cache
      #   uses: actions/cache@v3
      #   with:
      #     path: |
      #       ~/.cache/ms-playwright
      #     key: cache-playwright-linux-1.25.2

      # TODO: renable when new auth is in place
      # - name: Install Playwright Browsers
      #   # if: steps.playwright-cache.outputs.cache-hit != 'true'
      #   run: npx playwright install --with-deps
      #   working-directory: projects/threeid

      # - name: Run Playwright tests
      #   run: npx playwright test
      #   env:
      #     NODE_ENV: dev
      #     TEST_ENV: true
      #     ETH_GOERLI_PK: ${{ secrets.ETH_GOERLI_PK }}
      #     DAPP_HOST: 3id-dev.kubelt.com
      #     DAPP_PORT: 443
      #     DAPP_SCHEMA: https
      #   working-directory: projects/threeid
      # - uses: actions/upload-artifact@v2
      #   if: always()
      #   with:
      #     name: playwright-report
      #     path: playwright-report/
      #     retention-days: 5
