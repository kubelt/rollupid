---
name: Release ThreeID App
on:
  release:
    types: [published]

jobs:
  build-publish-threeid-current:
    runs-on: ubuntu-latest
    permissions:
      packages: read
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v3
        with:
          node-version: lts/gallium
          cache: "yarn"
          cache-dependency-path: ./yarn.lock
      - run: yarn install
      - name: Publish
        uses: cloudflare/wrangler-action@2.0.0
        with:
          apiToken: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          accountId: ${{ secrets.ADMIN_ACCOUNT_ID }}
          workingDirectory: "projects/threeid"
          environment: "current"
          command: publish --env current
          secrets: |
            SESSION_SECRET
            DATADOG_CLIENT_TOKEN
            DATADOG_APPLICATION_ID
            DATADOG_ENV
            DATADOG_SERVICE_NAME
            OORT_HOST
            OORT_SCHEMA
            OORT_PORT
            NFTAR_URL
            NFTAR_AUTHORIZATION
            MINTPFP_CONTRACT_ADDRESS
            NFTAR_CHAIN_ID
            VALID_CHAIN_ID_NAME
        env:
          CF_ZONE_ID: ${{ secrets.CF_ZONE_ID }}
          SESSION_SECRET: ${{ secrets.SESSION_SECRET }}
          # These values are injected into the generated wrangler.toml.
          ADMIN_ACCOUNT_ID: ${{ secrets.ADMIN_ACCOUNT_ID }}
          # The Datadog client token.
          DATADOG_CLIENT_TOKEN: ${{ secrets.DATADOG_CLIENT_TOKEN }}
          DATADOG_APPLICATION_ID: ${{ secrets.DATADOG_APPLICATION_ID }}
          DATADOG_ENV: current
          DATADOG_SERVICE_NAME: 3id-application
          # The Cloudflare API token used by wrangler.
          CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          OORT_HOST: oort-mainnet.kubelt.com
          OORT_SCHEMA: https
          OORT_PORT: 443
          NFTAR_URL: ${{ secrets.NFTAR_URL }}
          NFTAR_AUTHORIZATION: ${{ secrets.NFTAR_AUTHORIZATION }}
          MINTPFP_CONTRACT_ADDRESS: ${{ secrets.MINTPFP_CONTRACT_ADDRESS }}
          NFTAR_CHAIN_ID: 1
          VALID_CHAIN_ID_NAME: mainnet
      # - name: Install Playwright Browsers
      #   run: npx playwright install --with-deps
      #   working-directory: threeid
      # - name: Run Playwright tests
      #   run: npx playwright test
      #   env:
      #     NODE_ENV: production
      #     ETH_GOERLI_PK: ${{ secrets.ETH_GOERLI_PK }} # TODO: setup prod pk
      #     DAPP_HOST: 3id.kubelt.com
      #     DAPP_PORT: 443
      #     DAPP_SCHEMA: https
      #   working-directory: threeid
      # - uses: actions/upload-artifact@v2
      #   if: always()
      #   with:
      #     name: playwright-report
      #     path: playwright-report/
      #     retention-days: 5
